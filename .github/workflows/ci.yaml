on:
  push:
    branches: [master]
  pull_request:
name: rust

env:
  CARGO_INCREMENTAL: 0
  CARGO_TERM_COLOR: always

jobs:
  check:
    runs-on: ubuntu-latest
    name: ubuntu / stable / check
    steps:
      - name: Get sample dataset
        uses: actions/checkout@v4
        with:
          repository: sellershut/db-categories
          token: ${{ secrets.PAT_CATEGORIES_DATASET }}
          path: .dataset-categories
      - name: install surreal
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://install.surrealdb.com | sh
          surreal start --log trace --auth --user $DATABASE_USERNAME --pass $DATABASE_PASSWORD memory &
      - name: import dataset
        run: |
          surreal import --conn http://localhost:8000 --user $TEST_DATABASE_NAME --pass $TEST_DATABASE_PASSWORD --ns $TEST_DATABASE_NAMESPACE --db $TEST_DATABASE_NAME .dataset-categories/categories.surql
      - uses: actions/checkout@v4
      - name: Install stable
        uses: dtolnay/rust-toolchain@stable
      - name: cargo generate-lockfile
        if: hashFiles('Cargo.lock') == ''
        run: cargo generate-lockfile
      - name: cargo check
        run: cargo check

  os-check:
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os }} / stable
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v4
      - name: Install stable
        uses: dtolnay/rust-toolchain@stable
      - name: cargo generate-lockfile
        if: hashFiles('Cargo.lock') == ''
        run: cargo generate-lockfile
      - name: cargo test --workspace
        run: cargo test --no-run --workspace --locked --all-features --all-targets

  coverage:
    runs-on: ubuntu-latest
    name: ubuntu / stable / coverage
    steps:
      - uses: actions/checkout@v4
      - name: Install stable
        uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools-preview
      - name: cargo install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      - name: cargo llvm-cov
        run: cargo llvm-cov --workspace --locked --all-features --lcov --output-path lcov.info
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: true
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
